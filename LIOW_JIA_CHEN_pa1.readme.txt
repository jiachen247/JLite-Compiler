# CS4212 Programming Assignment
Liow Jia Chen
A0184022R

Notes:
Relaxed Grammar - Note that i relaxed the grammar a little bit to to handle `Atom + Atom` ambigioury introducted by the string concatination operator! see test case 12 for more examples.
When we introduce type checking next,  we will handle the type mismatch class of errors such as `1 + "2"`.

## Building and running

To run with input from file
```
$ make
$ java -cp ./bin/java-cup-11b.jar:out Main  src/test/pass/1.in
```

To diff output with expected output
```
$ java -cp ./bin/java-cup-11b.jar:out Main  src/test/4.in | diff src/test/4.ans -
```

* note that for the fail cases, some errors are not written to stdout so you diff might not be accurate and you will have to run and inspect manually!

## Error Handling
1. Line Numbers - using `left` and `right` from cup we are able to pinpoint the exact location of an error.
2. Error Productions - introduce some production rules to catch specific errors. For example, see test case 9 and 10!
3. Panic Mode Recovery - Instead of exiting early when an error is detected we use panic mode recovery to try to recovery so we can carry on and catch more errors.  See test case 8, 11 and 12 for this!
4*. Phase Level Recovery - Sadly i didnt get to implement this successfully. I tried simple corrections but that introduced more bugs to handle!

# Conclusion
Thanks for this assignment prof i really enjoyed myself doing it! Alot clearer on error recovery now though trying all the different methods! Realized given time, you can really catch a lot of erros by just
adding more rules if you think hard enough on the common error and causes and then writing helpful error messages! Eg Rust & Elm! Seems like people are finally realizing how much a good compiler
can help development work! Exciting time to be taking this mod :-) Looking forwarding to the next assignment!

If you have any questions with regards to the project you can reach me at jiachen@u.nus.edu !

## Test Cases
test cases can be found at `src/main/test`, <id>.in corresponds with <id>.ans


### PASS
1. test 1 - First example program (provided in assignment)
2. test 2 - Second example program (provided in assignment)
3. test 3 - Sample Fib function
3. test 4 - Test for lexical analyzer
3. test 5 - Test for parser
4. test 6 - Test for string concatenation grammar

### FAIL
1. test 7 - Empty Program
2. test 8 - Missing main function
3. test 9 - Missing Semicolon
4. test 10 - Wrong naming
5. test 11 - Example of Panic Mode Recovery
6. test 12 - Other Errors Caught - no statements
