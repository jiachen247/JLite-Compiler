Successfully parsed program! :-)

class Main {
	Void main() {
		Return 1;
	}
}

class Dummy {
	Int x;
	Bool y;
	String z;

	BasicType{name='Void'} retVoid() {
		return;
	}
	BasicType{name='String'} retString() {
		Return "";
	}
	BasicType{name='Bool'} returnBool() {
		Return true;
	}
	BasicType{name='Int'} retInt() {
		Return 1;
	}
	BasicType{name='Int'} test() {
		Return 2;
	}
}

class TestStatements {
	Int x;

	BasicType{name='Int'} testInvoke() {
		Int a;
		Dummy d;
		d = new Dummy();
		a = [test()];
		a = [d.test()];
		Return a;
	}
	BasicType{name='Int'} test() {
		Return 1;
	}
	BasicType{name='Void'} testControlFlows() {
		Int c;
		Bool b;
		Int x;
		Dummy d;
		If (true) {
			[d.retInt()];
		} else {
			[d.retInt()];
		}
		c = 0;
		While ([c, 10](>)) {
			c = [c, 1](+);
		}
		
		b = true;
		While (b) {
			x = [x, 1](+);
		}
		
		this.x = [test()]
		x = [test()];
		x = [d.retInt()];
	}
	BasicType{name='Void'} testVariableAssignment() {
		Int a;
		Int b;
		Dummy d;
		a = b;
		b = 1;
		d = new Dummy();
		d.x = 1
		d.y = true
		d.z = "1"
		return;
	}
}


[1/2] DistinctNameChecker: PASS
d = new Dummy();
a = [test()];
a = [d.test()];
c = 0;
c = [c, 1](+);
b = true;
x = [x, 1](+);
x = [test()];
x = [d.retInt()];
a = b;
b = 1;
d = new Dummy();
[2/2] TypeChecker: PASS
